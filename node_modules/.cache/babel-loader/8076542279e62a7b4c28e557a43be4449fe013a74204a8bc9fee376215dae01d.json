{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport const useFetching = callback => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fetching = async function () {\n    try {\n      setIsLoading(true);\n      await callback(...arguments);\n    } catch (e) {\n      setError(e.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return [fetching, isLoading, error];\n};\n_s(useFetching, \"AxZxtnUzare8ll1Rk4kFSeA5V2Q=\");","map":{"version":3,"names":["useState","useFetching","callback","_s","isLoading","setIsLoading","error","setError","fetching","arguments","e","message"],"sources":["C:/Users/requi/Desktop/test/src/hooks/useFetching.js"],"sourcesContent":["import {useState} from \"react\";\n\nexport const useFetching = (callback) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const fetching = async (...args) => {\n        try {\n            setIsLoading(true)\n            await callback(...args)\n        } catch (e) {\n            setError(e.message);\n        } finally {\n            setIsLoading(false)\n        }\n    }\n\n    return [fetching, isLoading, error]\n}\n"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,OAAO,MAAMC,WAAW,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,QAAQ,GAAG,eAAAA,CAAA,EAAmB;IAChC,IAAI;MACAH,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMH,QAAQ,CAAC,GAAAO,SAAO,CAAC;IAC3B,CAAC,CAAC,OAAOC,CAAC,EAAE;MACRH,QAAQ,CAACG,CAAC,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACNN,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO,CAACG,QAAQ,EAAEJ,SAAS,EAAEE,KAAK,CAAC;AACvC,CAAC;AAAAH,EAAA,CAhBYF,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}